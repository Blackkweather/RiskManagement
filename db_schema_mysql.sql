-- MySQL database schema converted from Prisma schema for phpMyAdmin

CREATE DATABASE IF NOT EXISTS risk_php_db;
USE risk_php_db;

DROP TABLE IF EXISTS AuditLog;
DROP TABLE IF EXISTS ActionPlan;
DROP TABLE IF EXISTS Department;
DROP TABLE IF EXISTS RiskControl;
DROP TABLE IF EXISTS Risk;
DROP TABLE IF EXISTS RiskFamily;
DROP TABLE IF EXISTS PerformanceIndicator;
DROP TABLE IF EXISTS OperationalObjectif;
DROP TABLE IF EXISTS StrategicObjectif;
DROP TABLE IF EXISTS Activity;
DROP TABLE IF EXISTS Process;
DROP TABLE IF EXISTS Domaine;
DROP TABLE IF EXISTS Entity;
DROP TABLE IF EXISTS Project;
DROP TABLE IF EXISTS ClientProfile;
DROP TABLE IF EXISTS User;
DROP TABLE IF EXISTS Status;
DROP TABLE IF EXISTS Role;

CREATE TABLE Role (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE Status (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE ClientProfile (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  denomination VARCHAR(255) NOT NULL,
  judicial VARCHAR(255) NOT NULL,
  sector VARCHAR(255) NOT NULL,
  code VARCHAR(255),
  config ENUM('NORMAL', 'COEFFIECCIENT', 'BASIC') NOT NULL,
  appetencyActive BOOLEAN NOT NULL
);

CREATE TABLE Project (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  name VARCHAR(255) NOT NULL,
  code VARCHAR(255),
  clientId INT NOT NULL,
  active BOOLEAN NOT NULL,
  UNIQUE KEY unique_client_name (clientId, name),
  CONSTRAINT fk_project_client FOREIGN KEY (clientId) REFERENCES ClientProfile(id) ON DELETE CASCADE
);

CREATE TABLE Entity (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  name VARCHAR(255) NOT NULL,
  code VARCHAR(255),
  projectId INT NOT NULL,
  parentId INT,
  UNIQUE KEY unique_project_name (projectId, name),
  CONSTRAINT fk_entity_project FOREIGN KEY (projectId) REFERENCES Project(id),
  CONSTRAINT fk_entity_parent FOREIGN KEY (parentId) REFERENCES Entity(id) ON DELETE CASCADE
);

CREATE TABLE Domaine (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  code VARCHAR(255),
  name VARCHAR(255) NOT NULL,
  projectId INT NOT NULL,
  UNIQUE KEY unique_project_name (projectId, name),
  CONSTRAINT fk_domaine_project FOREIGN KEY (projectId) REFERENCES Project(id) ON DELETE CASCADE
);

CREATE TABLE Process (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  name VARCHAR(255) NOT NULL,
  code VARCHAR(255),
  description TEXT,
  domaineId INT NOT NULL,
  parentId INT,
  UNIQUE KEY unique_domaine_name (domaineId, name),
  CONSTRAINT fk_process_domaine FOREIGN KEY (domaineId) REFERENCES Domaine(id) ON DELETE CASCADE,
  CONSTRAINT fk_process_parent FOREIGN KEY (parentId) REFERENCES Process(id) ON DELETE CASCADE
);

CREATE TABLE Activity (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  name VARCHAR(255) NOT NULL,
  code VARCHAR(255),
  description TEXT,
  processId INT NOT NULL,
  parentId INT,
  UNIQUE KEY unique_process_name (processId, name),
  CONSTRAINT fk_activity_process FOREIGN KEY (processId) REFERENCES Process(id) ON DELETE CASCADE,
  CONSTRAINT fk_activity_parent FOREIGN KEY (parentId) REFERENCES Activity(id) ON DELETE CASCADE
);

CREATE TABLE StrategicObjectif (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  name VARCHAR(255) NOT NULL,
  code VARCHAR(255),
  description TEXT,
  projectId INT NOT NULL,
  UNIQUE KEY unique_project_name (projectId, name),
  CONSTRAINT fk_strategic_project FOREIGN KEY (projectId) REFERENCES Project(id) ON DELETE CASCADE
);

CREATE TABLE OperationalObjectif (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  name VARCHAR(255) NOT NULL,
  code VARCHAR(255),
  description TEXT,
  strategicObjectiveId INT NOT NULL,
  UNIQUE KEY unique_strategic_name (strategicObjectiveId, name),
  CONSTRAINT fk_operational_strategic FOREIGN KEY (strategicObjectiveId) REFERENCES StrategicObjectif(id) ON DELETE CASCADE
);

CREATE TABLE PerformanceIndicator (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  name VARCHAR(255) NOT NULL,
  code VARCHAR(255),
  description TEXT,
  currentValue DECIMAL(10,2) NOT NULL,
  targetValue DECIMAL(10,2) NOT NULL,
  projectId INT NOT NULL,
  UNIQUE KEY unique_project_name (projectId, name),
  CONSTRAINT fk_performance_project FOREIGN KEY (projectId) REFERENCES Project(id) ON DELETE CASCADE
);

CREATE TABLE RiskFamily (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  name VARCHAR(255) NOT NULL,
  projectId INT NOT NULL,
  CONSTRAINT fk_riskfamily_project FOREIGN KEY (projectId) REFERENCES Project(id)
);

CREATE TABLE Risk (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  name VARCHAR(255) NOT NULL,
  code VARCHAR(255),
  description TEXT,
  cause TEXT NOT NULL,
  details TEXT,
  frequency INT NOT NULL,
  existantDb TEXT,
  financialImpact INT NOT NULL,
  legalImpact INT NOT NULL,
  reputationImpact INT NOT NULL,
  activityImpact INT NOT NULL,
  peopleImpact INT NOT NULL,
  brutCriticality INT NOT NULL,
  evaluation INT NOT NULL,
  netCriticality INT NOT NULL,
  active BOOLEAN NOT NULL,
  activityId INT NOT NULL,
  entityId INT NOT NULL,
  operationalObjectiveId INT,
  strategicObjectiveId INT,
  riskFamilyId INT,
  CONSTRAINT fk_risk_activity FOREIGN KEY (activityId) REFERENCES Activity(id) ON DELETE CASCADE,
  CONSTRAINT fk_risk_entity FOREIGN KEY (entityId) REFERENCES Entity(id) ON DELETE CASCADE,
  CONSTRAINT fk_risk_operational FOREIGN KEY (operationalObjectiveId) REFERENCES OperationalObjectif(id) ON DELETE CASCADE,
  CONSTRAINT fk_risk_strategic FOREIGN KEY (strategicObjectiveId) REFERENCES StrategicObjectif(id) ON DELETE CASCADE,
  CONSTRAINT fk_risk_family FOREIGN KEY (riskFamilyId) REFERENCES RiskFamily(id)
);

CREATE TABLE RiskControl (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  name VARCHAR(255),
  code VARCHAR(255),
  riskId INT NOT NULL,
  meanIndicator TEXT,
  meanOrganization TEXT,
  meanManualPre TEXT,
  meanManualPost TEXT,
  meanIntegrated TEXT,
  meanProgrammed TEXT,
  meanReference TEXT,
  evaluation INT,
  proposedControl TEXT,
  proposedControlDescription TEXT,
  UNIQUE KEY unique_risk_name (riskId, name),
  CONSTRAINT fk_riskcontrol_risk FOREIGN KEY (riskId) REFERENCES Risk(id) ON DELETE CASCADE
);

CREATE TABLE Department (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE ActionPlan (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  title VARCHAR(255) NOT NULL,
  description TEXT,
  dueDate DATETIME,
  riskId INT NOT NULL,
  status VARCHAR(255) NOT NULL,
  CONSTRAINT fk_actionplan_risk FOREIGN KEY (riskId) REFERENCES Risk(id) ON DELETE CASCADE
);

CREATE TABLE AuditLog (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  userId INT NOT NULL,
  action VARCHAR(255) NOT NULL,
  entity VARCHAR(255) NOT NULL,
  entityId INT NOT NULL,
  description TEXT,
  CONSTRAINT fk_auditlog_user FOREIGN KEY (userId) REFERENCES User(id) ON DELETE CASCADE
);

CREATE TABLE User (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  email VARCHAR(255) UNIQUE NOT NULL,
  firstName VARCHAR(255) NOT NULL,
  lastName VARCHAR(255) NOT NULL,
  phone VARCHAR(255) UNIQUE NOT NULL,
  hash VARCHAR(255) NOT NULL,
  roleId INT NOT NULL,
  statusId INT NOT NULL,
  clientProfileId INT,
  CONSTRAINT fk_user_role FOREIGN KEY (roleId) REFERENCES Role(id) ON DELETE CASCADE,
  CONSTRAINT fk_user_status FOREIGN KEY (statusId) REFERENCES Status(id) ON DELETE CASCADE,
  CONSTRAINT fk_user_client FOREIGN KEY (clientProfileId) REFERENCES ClientProfile(id) ON DELETE CASCADE
);

-- Add indexes and other constraints as needed
